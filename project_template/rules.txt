% INIZIO
H(start,0)
/\ begin(X, Y, C, F)
--->E(sono(X, Y, C, F), 0).

%% /\ not clause(end(X,Y,C,F), true) %% aggiungendo questa riga all'evento impediamo di terminare il gioco nella stessa casella dell'inizio


H(start,0)
/\ not clause(begin(_,_,_,_), true)
---> E(sono(1,1,_,_),0).

%% cosi il numero di casi se aggiungiamo una cluasola esplode! perche non fare aspettative separate???
%OBIETTIVO se non e definito maxmove
 H(start,0)
 /\ end(X, Y, C, F)
 --->E(sono(X,Y,C,F),T) /\ T > 0
 	/\EN(sono(_,_,_,_),T2) /\ T2 > T.

H(start,0)
/\ not clause(end(_,_,_,_), true)
--->E(sono(7,7,_,_),T) /\ T > 0 
	/\EN(sono(_,_,_,_),T2) /\ T2 > T.

H(start,0)
/\ maxmove(MAXT)
--->EN(sono(_,_,_,_),T2) /\ T2 > MAXT.

H(start,0)
 /\ minmove(MINT)
 --->E(sono(_,_,_,_),T2) /\ T2 > MINT.

% Mossa che devi fare entro DELAY mosse
H(start,0)
/\ H(sono(X,Y,C,F),T)
/\ force([X,Y,C,F],[X2,Y2,C2,F2], DELAY)	
--->E(sono(X2,Y2,C2,F2),T2) /\ T2 > T /\ T2 <= T+DELAY.

% Mossa che NON puoi fare per DELAY mosse
H(start,0)
/\ H(sono(X,Y,C,F),T)
/\ ban([X,Y,C,F],[X2,Y2,C2,F2], DELAY)	
--->EN(sono(X2,Y2,C2,F2),T2) /\ T2 > T /\ T2 <= T+DELAY.

% regola che stabilisce come DEVO spostarmi [definito in kb.pl] rispetto all'ultimo click
H(start,0)
/\ move_rules([X,Y,C,F], COND, DELAY)
/\ H(sono(X,Y,C,F),T)
--->E(sono(X2,Y2,C2,F2),T2) /\ T2 > T /\ T2 <= T+DELAY /\ call(COND, X, Y, X2, Y2).

%% condregola([X,Y,C,F], [X2,Y2,C2,F2]).

% regola che stabilisce come NON POSSO spostarmi [definito in kb.pl] rispetto all'ultimo click
H(start,0)
/\ not_move_rules([X,Y,C,F], COND, DELAY)
/\ H(sono(X,Y,C,F),T)
--->EN(sono(X2,Y2,C2,F2),T2) /\ T2 > T /\ T2 <= T+DELAY /\ call(COND, X, Y, X2, Y2).





